{
	"info": {
		"_postman_id": "1e4727ff-86b4-444b-93b4-8b82c66c276c",
		"name": "LF-CLA v2",
		"description": "API for CLA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "1ce26463-7075-4d7b-88a5-20e8d725a130",
			"name": "Repository",
			"item": [
				{
					"_postman_id": "28031f44-22a6-4ac4-99f7-fe85bb53fbf9",
					"name": "Get repos",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/repository",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"repository"
							]
						},
						"description": "GET: /repository\n\nReturns all CLA repositories.\n"
					},
					"response": []
				},
				{
					"_postman_id": "4d7fbe6f-352d-4e07-b3a1-a1ed7dff06ce",
					"name": "Post a new repo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/repository",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"repository"
							]
						},
						"description": "    POST: /repository\n\n    DATA: {'repository_project_id': '<project-id>',\n           'repository_external_id': 'repo1',\n           'repository_name': 'Repo Name',\n           'repository_type': 'github',\n           'repository_url': 'http://url-to-repo.com'}\n\n    repository_external_id is the ID of the repository given by the repository service provider.\n    It is used to redirect the user back to the appropriate location once signing is complete.\n\n    Returns the CLA repository that was just created."
					},
					"response": []
				},
				{
					"_postman_id": "61ab7db4-3cda-4689-8ec6-dd60270d8314",
					"name": "Update a repo",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/repository",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"repository"
							]
						},
						"description": "    PUT: /repository\n\n    DATA: {'repository_id': '<repo-id>',\n           'repository_url': 'http://new-url-to-repository.com'}\n\n    Returns the CLA repository that was just updated.\n    \n    Can update:\n    \trepository_name=None,\n        repository_type=None,\n        repository_url=None\n    Haven't fully explore yet"
					},
					"response": []
				},
				{
					"_postman_id": "625365e0-da4f-429d-8349-8648fe234994",
					"name": "Get repos based on id",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/repository/{repository_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"repository",
								"{repository_id}"
							]
						},
						"description": "GET: /repository/{repository_id}\n\nReturns the CLA repository requested by UUID.\n"
					},
					"response": []
				},
				{
					"_postman_id": "10002385-b3c3-4abd-a3fb-870edacacf90",
					"name": "Delete a repo",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/repository/134eb079-1a06-4c3f-930a-7d40ad656b60",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"repository",
								"134eb079-1a06-4c3f-930a-7d40ad656b60"
							]
						},
						"description": "    DELETE: /repository/{repository_id}\n\n    Deletes the specified repository based on repo UUID."
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "34925b03-5521-4ee6-bda3-1a287c674248",
			"name": "Repository-Service",
			"item": [
				{
					"_postman_id": "beca020c-c973-47e1-a2f1-75ca8d59e143",
					"name": "Get sign status icon",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/repository-provider/github/icon.svg?signed=true",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"repository-provider",
								"github",
								"icon.svg"
							],
							"query": [
								{
									"key": "signed",
									"value": "true"
								}
							]
						},
						"description": "GET: /repository-provider/{provider}/icon.svg\n\nReturns the CLA status image for the provider requested."
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "66fd5619-cc6f-420c-a67a-74593b441246",
			"name": "DocuSign",
			"item": [
				{
					"_postman_id": "ef2f1388-5587-4d2a-b34d-09dfcc03666e",
					"name": "Post individual sign request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/request-individual-signature?",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"request-individual-signature"
							],
							"query": [
								{
									"key": "project_id",
									"value": "b46e6909-a6fd-487f-bf07-7c5c55143cd5",
									"disabled": true
								},
								{
									"key": "user_id",
									"value": "5b23444e-d0f7-410c-8156-228f212e99f3",
									"disabled": true
								}
							]
						},
						"description": "Creates a new signature given project and user IDs. The user will be redirected to the return_url once signature is complete.\n\n    Returns a dict of the format:\n\n        {'user_id': <user_id>,\n         'signature_id': <signature_id>,\n         'project_id': <project_id>,\n         'sign_url': <sign_url>}\n\nUser should hit the provided URL to initiate the signing process through the signing service provider."
					},
					"response": []
				},
				{
					"_postman_id": "c1fee859-670d-4d9c-9670-5002f6c49e48",
					"name": "Post corporate sign request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/request-corporate-signature",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"request-corporate-signature"
							]
						},
						"description": "DATA: {'project_id': 'some-project-id',\n      'company_id': 'some-company-id',\n      'return_url': <optional>}\n\n    Creates a new signature given project and company IDs. The manager will be redirected to the\n    return_url once signature is complete.\n\n    Returns a dict of the format:\n\n        {'company_id': <user_id>,\n         'signature_id': <signature_id>,\n         'project_id': <project_id>,\n         'sign_url': <sign_url>}\n\nManager should hit the provided URL to initiate the signing process through thesigning service provider."
					},
					"response": []
				},
				{
					"_postman_id": "5e2bf618-e4ba-4bb7-b912-d5dc19bd67bd",
					"name": "Get return URL upon completing signature",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/return-url/{signature_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"return-url",
								"{signature_id}"
							]
						},
						"description": "The endpoint the user will be redirected to upon completing signature. Will utilize the signature's \"signature_return_url\" field to redirect the user to the appropriate location. Will also capture the signing service provider's return GET parameters, such as DocuSign's 'event' flag that describes the redirect reason"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "6011e21f-2e3d-4cc4-9256-f142832868ab",
			"name": "Github",
			"item": [
				{
					"_postman_id": "217a0b6e-e113-4be2-a549-efc9fe9c33e5",
					"name": "Get GH organizations",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/github/organizations",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"github",
								"organizations"
							]
						},
						"description": "Returns all CLA Github Organizations.\n"
					},
					"response": []
				},
				{
					"_postman_id": "7af45959-f080-4c0a-b2f4-0d1ab81210a3",
					"name": "Get GH organization by name",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/github/organizations/{organization_name}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"github",
								"organizations",
								"{organization_name}"
							]
						},
						"description": "Returns the CLA Github Organization requested by Name"
					},
					"response": []
				},
				{
					"_postman_id": "e9c996ab-2811-41ff-851a-95f8582f7894",
					"name": "Get selected repos by org name",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/github/organizations/{organization_name}/repositories",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"github",
								"organizations",
								"{organization_name}",
								"repositories"
							]
						},
						"description": "Returns a list of Repositories selected under this organization."
					},
					"response": []
				},
				{
					"_postman_id": "8064390a-5323-4b5e-8dcc-67c4a0b98488",
					"name": "Post New Organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "organization_name",
									"value": "",
									"sessionValue": "Twobulls_Test_Orgs",
									"type": "text"
								},
								{
									"key": "organization_project_id",
									"value": "",
									"sessionValue": "b46e6909-a6fd-487f-bf07-7c5c55143cd5",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/github/organizations",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"github",
								"organizations"
							]
						},
						"description": "Post a new organization to a specific CLA project.\n\nReturns the CLA GitHub Organization that was just created.\n"
					},
					"response": []
				},
				{
					"_postman_id": "6285fbe7-4c45-4b7d-91a2-f7786cc3425e",
					"name": "Delete GH organization by name",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/github/organizations/{organization_name}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"github",
								"organizations",
								"{organization_name}"
							]
						},
						"description": "Deletes the specified Github Organization by name.\n\nReturn {\"success\": boolean} Or Error\n"
					},
					"response": []
				},
				{
					"_postman_id": "3adfcd35-16e5-4b44-b032-eacae1c718ed",
					"name": "Get GH namespce check",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/github/check/namespace/{namespace}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"github",
								"check",
								"namespace",
								"{namespace}"
							]
						},
						"description": "GET: /github/check/namespace/{namespace}\n\nReturns True if the namespace provided is a valid GitHub account."
					},
					"response": []
				},
				{
					"_postman_id": "3ea88414-e5a2-444d-94ad-37c3f1866b35",
					"name": "Get GH account info by name",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/github/get/namespace/runzedong",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"github",
								"get",
								"namespace",
								"runzedong"
							]
						},
						"description": "GET: /github/get/namespace/{namespace}\n\nReturns info on the GitHub account provided."
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "6e1f5ba5-b02c-428b-8a8c-914314174d6e",
			"name": "User",
			"item": [
				{
					"_postman_id": "f3e61c5a-8d6f-41c3-81a8-1459f0fbad15",
					"name": "Get Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user_id\": \"4dd50a9c-853a-4921-92af-44e61ab2085d\",\n    \"user_company_id\": \"123456789\"\n}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user"
							]
						},
						"description": "Returns all CLA users"
					},
					"response": []
				},
				{
					"_postman_id": "b053fd4b-ca7f-42fb-87c8-f2a0c0597da5",
					"name": "Get User by Github ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user_id\": \"4dd50a9c-853a-4921-92af-44e61ab2085d\",\n    \"user_company_id\": \"123456789\"\n}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/github/{user_github_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"github",
								"{user_github_id}"
							]
						},
						"description": "Returns the requested user data based on user GitHub ID."
					},
					"response": [
						{
							"id": "2b16cd23-01c7-448d-b554-3a488604b7a9",
							"name": "Get User by Github ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user_id\": \"4dd50a9c-853a-4921-92af-44e61ab2085d\",\n    \"user_company_id\": \"123456789\"\n}"
								},
								"url": {
									"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/github/{user_github_id}",
									"protocol": "https",
									"host": [
										"{{endpoint_url}}"
									],
									"path": [
										"{{stage}}",
										"{{version}}",
										"user",
										"github",
										"{user_github_id}"
									]
								},
								"description": "Returns the requested user data based on user GitHub ID."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"name": "content-length",
									"key": "content-length",
									"value": "339",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "content-type",
									"key": "content-type",
									"value": "application/json",
									"description": "The mime type of this content"
								},
								{
									"name": "date",
									"key": "date",
									"value": "Wed, 01 Aug 2018 22:23:11 GMT",
									"description": "The date and time that the message was sent"
								},
								{
									"name": "status",
									"key": "status",
									"value": "200",
									"description": "Custom header"
								},
								{
									"name": "via",
									"key": "via",
									"value": "1.1 27f5831be5a9ad411fca9c84fe627bdc.cloudfront.net (CloudFront)",
									"description": "Informs the client of proxies through which the response was sent."
								},
								{
									"name": "x-amz-apigw-id",
									"key": "x-amz-apigw-id",
									"value": "K9zgcHKFoAMF-zQ=",
									"description": "Custom header"
								},
								{
									"name": "x-amz-cf-id",
									"key": "x-amz-cf-id",
									"value": "f36A-u5UQLNlZPdj_wzH3nqONw1Io6XxnlnKHdpj1ikBu5Qt-9Rfyw==",
									"description": "Custom header"
								},
								{
									"name": "x-amzn-remapped-content-length",
									"key": "x-amzn-remapped-content-length",
									"value": "339",
									"description": "Custom header"
								},
								{
									"name": "x-amzn-requestid",
									"key": "x-amzn-requestid",
									"value": "79a7ec16-95d9-11e8-981b-ff868796d337",
									"description": "Custom header"
								},
								{
									"name": "x-amzn-trace-id",
									"key": "x-amzn-trace-id",
									"value": "Root=1-5b6232cf-292fe7dcb0c151343c7cae85;Sampled=0",
									"description": "Custom header"
								},
								{
									"name": "x-cache",
									"key": "x-cache",
									"value": "Miss from cloudfront",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "{\"date_created\": \"2018-07-30T20:12:00.030050+0000\", \"date_modified\": \"2018-07-30T20:12:00.030056+0000\", \"user_company_id\": \"123456789\", \"user_emails\": [\"user@email.com\"], \"user_external_id\": null, \"user_github_id\": \"12345\", \"user_id\": \"4dd50a9c-853a-4921-92af-44e61ab2085d\", \"user_ldap_id\": null, \"user_name\": \"User Name\", \"version\": \"v1\"}"
						}
					]
				},
				{
					"_postman_id": "45d8af39-47da-420b-9f2d-af2c8eed3df8",
					"name": "Get User by Email",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user_id\": \"4dd50a9c-853a-4921-92af-44e61ab2085d\",\n    \"user_company_id\": \"123456789\"\n}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/email/{user_email}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"email",
								"{user_email}"
							]
						},
						"description": "Returns the requested user data based on user email"
					},
					"response": []
				},
				{
					"_postman_id": "da1b8c7a-8d80-44c8-82c0-0a3cb7193ace",
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user_id\": \"4dd50a9c-853a-4921-92af-44e61ab2085d\",\n    \"user_company_id\": \"123456789\"\n}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/{user_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"{user_id}"
							]
						},
						"description": "Returns the requested user data based on ID."
					},
					"response": []
				},
				{
					"_postman_id": "b2546e15-8c82-41c9-b86e-c746ba32da8e",
					"name": "Post User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': 'user@email.com', 'user_name': 'User Name',\n           'user_company_id': '<org-id>', 'user_github_id': 12345}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user"
							]
						},
						"description": "Returns the data of the newly created user."
					},
					"response": []
				},
				{
					"_postman_id": "cc15b54b-62b5-46e2-bbda-3a81a18cf771",
					"name": "Put User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': 'user@email.com', 'user_name': 'User Name',\n           'user_company_id': '<org-id>', 'user_github_id': 12345}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user"
							]
						},
						"description": "Supports all the same fields as the POST equivalent.\nReturns the data of the updated user."
					},
					"response": []
				},
				{
					"_postman_id": "56960846-d0cf-4288-a099-21bff9c8fce2",
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': 'user@email.com', 'user_name': 'User Name',\n           'user_company_id': '<org-id>', 'user_github_id': 12345}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/{user_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"{user_id}"
							]
						},
						"description": "Deletes the specified user."
					},
					"response": []
				},
				{
					"_postman_id": "ffbca0e1-1db2-4a7f-bad4-25a87aeeecb9",
					"name": "Get User Signatures",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': 'user@email.com', 'user_name': 'User Name',\n           'user_company_id': '<org-id>', 'user_github_id': 12345}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/{user_id}/signatures",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"{user_id}",
								"signatures"
							]
						},
						"description": "Returns a list of signatures associated with a user."
					},
					"response": []
				},
				{
					"_postman_id": "cf586630-d337-4411-87a0-0854f7d18085",
					"name": "Get User Active Signature",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': <email-selection>, 'message': 'custom message to manager'}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/{user_id}/active-signature",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"{user_id}",
								"active-signature"
							]
						},
						"description": " Returns all metadata associated with a user's active signature.\n\n    {'user_id': <user-id>,\n     'project_id': <project-id>,\n     'repository_id': <repository-id>,\n     'pull_request_id': <PR>,\n     'return_url': <url-where-user-initiated-signature-from>'}\n     \nReturns null if the user does not have an active signature."
					},
					"response": []
				},
				{
					"_postman_id": "fd57ee65-431a-4544-94db-978d9efe8641",
					"name": "Get Users Company",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': 'user@email.com', 'user_name': 'User Name',\n           'user_company_id': '<org-id>', 'user_github_id': 12345}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/users/company/{user_company_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"users",
								"company",
								"{user_company_id}"
							]
						},
						"description": "Returns a list of users associated with an company."
					},
					"response": []
				},
				{
					"_postman_id": "20171d57-10b5-42b2-a232-b6756455d753",
					"name": "Request Company Whitelist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': <email-selection>, 'message': 'custom message to manager'}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/{user_id}/request-company-whitelist/{company_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"{user_id}",
								"request-company-whitelist",
								"{company_id}"
							]
						},
						"description": "Performs the necessary actions (ie: send email to manager) when the specified user requests to\n    be added the the specified company's whitelist."
					},
					"response": []
				},
				{
					"_postman_id": "ecf6057c-08d9-48fc-b725-0f286fc92e09",
					"name": "Get User Project Latest Signature",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': <email-selection>, 'message': 'custom message to manager'}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/{user_id}/project/{project_id}/last-signature",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"{user_id}",
								"project",
								"{project_id}",
								"last-signature"
							]
						},
						"description": "Returns the user's latest ICLA signature for the project specified."
					},
					"response": []
				},
				{
					"_postman_id": "6c8b218f-5fb3-4a7f-98c1-e66ecdfa66b3",
					"name": "Get User Signature by Project and Company",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{'user_email': <email-selection>, 'message': 'custom message to manager'}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/user/{user_id}/project/{project_id}/last-signature/{company_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"user",
								"{user_id}",
								"project",
								"{project_id}",
								"last-signature",
								"{company_id}"
							]
						},
						"description": "Returns the user's latest employee signature for the project and company specified."
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "5fccc2f8-3d64-482f-8220-5740c40f223b",
			"name": "Signatures",
			"item": [
				{
					"_postman_id": "c88731d4-bed3-4455-96c1-4db874c910b3",
					"name": "Get Signatures",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signature",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signature"
							]
						},
						"description": "Returns all CLA signatures."
					},
					"response": []
				},
				{
					"_postman_id": "dc89e241-893f-44aa-81e1-ca8220b0e291",
					"name": "Get Signature",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signature/{signature_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signature",
								"{signature_id}"
							]
						},
						"description": "Returns the CLA signature requested by UUID."
					},
					"response": []
				},
				{
					"_postman_id": "7a2f009c-8162-4a7a-8b4c-ad292b536e68",
					"name": "Post Signature",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"signature_type\": \"cla\",\n           \"signature_signed\": true,\n           \"signature_approved\": true,\n           \"signature_sign_url\": \"http://sign.com/here\",\n           \"signature_return_url\": \"http://cla-system.com/signed\",\n           \"signature_project_id\": \"123\",\n           \"signature_user_ccla_company_id\": \"456\",\n           \"signature_reference_id\": \"493cdd31-79da-41be-beb5-7ff7b67c637b\",\n           \"signature_reference_type\": \"user\"}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signature",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signature"
							]
						},
						"description": "Returns a CLA signatures that was created."
					},
					"response": [
						{
							"id": "e77bd745-553a-49a9-aecd-9b077b9a5273",
							"name": "Post Example Signature",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"signature_type\": \"cla\",\n           \"signature_signed\": true,\n           \"signature_approved\": true,\n           \"signature_sign_url\": \"http://sign.com/here\",\n           \"signature_return_url\": \"http://cla-system.com/signed\",\n           \"signature_project_id\": \"123\",\n           \"signature_user_ccla_company_id\": \"456\",\n           \"signature_reference_id\": \"493cdd31-79da-41be-beb5-7ff7b67c637b\",\n           \"signature_reference_type\": \"user\"}"
								},
								"url": {
									"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signature",
									"protocol": "https",
									"host": [
										"{{endpoint_url}}"
									],
									"path": [
										"{{stage}}",
										"{{version}}",
										"signature"
									]
								},
								"description": "Returns a CLA signatures that was created."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"name": "content-length",
									"key": "content-length",
									"value": "709",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "content-type",
									"key": "content-type",
									"value": "application/json",
									"description": "The mime type of this content"
								},
								{
									"name": "date",
									"key": "date",
									"value": "Wed, 01 Aug 2018 22:43:04 GMT",
									"description": "The date and time that the message was sent"
								},
								{
									"name": "status",
									"key": "status",
									"value": "200",
									"description": "Custom header"
								},
								{
									"name": "via",
									"key": "via",
									"value": "1.1 29206f4909cacc031d06a0daf330fb6a.cloudfront.net (CloudFront)",
									"description": "Informs the client of proxies through which the response was sent."
								},
								{
									"name": "x-amz-apigw-id",
									"key": "x-amz-apigw-id",
									"value": "K92a3GnIoAMF_qw=",
									"description": "Custom header"
								},
								{
									"name": "x-amz-cf-id",
									"key": "x-amz-cf-id",
									"value": "Hkuqg7Uz45xztgGQCm4sjjTg4bU4UUkmGo0Rpw-QeGcMsn2es9izZQ==",
									"description": "Custom header"
								},
								{
									"name": "x-amzn-remapped-content-length",
									"key": "x-amzn-remapped-content-length",
									"value": "709",
									"description": "Custom header"
								},
								{
									"name": "x-amzn-requestid",
									"key": "x-amzn-requestid",
									"value": "40d38dd1-95dc-11e8-bb9c-5b9bb16ee740",
									"description": "Custom header"
								},
								{
									"name": "x-amzn-trace-id",
									"key": "x-amzn-trace-id",
									"value": "Root=1-5b623778-8f5ee266ad0bb3b0d19a232a;Sampled=0",
									"description": "Custom header"
								},
								{
									"name": "x-cache",
									"key": "x-cache",
									"value": "Miss from cloudfront",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "{\"date_created\": \"2018-08-01T21:45:26.724314+0000\", \"date_modified\": \"2018-08-01T21:45:26.724321+0000\", \"signature_approved\": true, \"signature_callback_url\": null, \"signature_document_major_version\": \"1\", \"signature_document_minor_version\": \"0\", \"signature_external_id\": null, \"signature_id\": \"42ba111b-b69c-42de-8f36-547155cf3727\", \"signature_project_id\": \"d394fabf-a565-4392-b4a2-e7c86e93c38a\", \"signature_reference_id\": \"4dd50a9c-853a-4921-92af-44e61ab2085d\", \"signature_reference_type\": \"user\", \"signature_return_url\": \"http://cla-system.com/signed\", \"signature_sign_url\": \"http://sign.com/here\", \"signature_signed\": true, \"signature_type\": \"cla\", \"signature_user_ccla_company_id\": \"456\", \"version\": \"v1\"}"
						}
					]
				},
				{
					"_postman_id": "b7513c79-f649-40ad-a277-efc8d28a396a",
					"name": "Put Signature",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"signature_id\": \"<signature-id>\",\n           \"signature_type\": \"cla\", \"signature_signed\": true}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signature",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signature"
							]
						},
						"description": "Supports all the fields as the POST equivalent.\n\n    Returns the CLA signature that was just updated."
					},
					"response": []
				},
				{
					"_postman_id": "46ecc83b-97b7-4cac-9940-d916a5350cc3",
					"name": "Delete Signature",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signature/{signature_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signature",
								"{signature_id}"
							]
						},
						"description": "Deletes the specified signature."
					},
					"response": []
				},
				{
					"_postman_id": "a41000e6-8b1b-4f6c-81b6-eea561988748",
					"name": "Get Signatures User",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signatures/user/{user_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signatures",
								"user",
								"{user_id}"
							]
						},
						"description": "Get all signatures for user specified."
					},
					"response": []
				},
				{
					"_postman_id": "c8a9ea86-e87d-49e0-8d0d-65e999367384",
					"name": "Get Signatures User Project",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signatures/user/{user_id}/project/{project_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signatures",
								"user",
								"{user_id}",
								"project",
								"{project_id}"
							]
						},
						"description": "Get all signatures for user, filtered by project_id specified."
					},
					"response": []
				},
				{
					"_postman_id": "ef5fa4ad-b92e-4f62-9709-e684f20ac274",
					"name": "Get Signatures User Project by Type",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signatures/user/{user_id}/project/{project_id}/type/{signature_type}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signatures",
								"user",
								"{user_id}",
								"project",
								"{project_id}",
								"type",
								"{signature_type}"
							]
						},
						"description": "Get all signatures for user, filtered by project_id and signature type specified.\n\nSignature type can be [individual|corporate|employee]"
					},
					"response": []
				},
				{
					"_postman_id": "f88888df-44a4-4755-bec6-a1dca41d0c54",
					"name": "Get Signatures Company",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signatures/company/{company_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signatures",
								"company",
								"{company_id}"
							]
						},
						"description": "Get all signatures for company specified."
					},
					"response": []
				},
				{
					"_postman_id": "07ecdfaa-d685-4294-ae6c-8e597f9aff28",
					"name": "Get Signatures Project",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signatures/project/{project_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signatures",
								"project",
								"{project_id}"
							]
						},
						"description": "Get all signatures for project specified."
					},
					"response": []
				},
				{
					"_postman_id": "70183b2f-343c-468f-8a4c-036d01a6bbf7",
					"name": "Get Signatures Project Company",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/signatures/company/{company_id}/project/{project_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"signatures",
								"company",
								"{company_id}",
								"project",
								"{project_id}"
							]
						},
						"description": "Get all signatures for project specified and a company specified"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "8a4637ea-840c-413e-8636-721c242943d3",
			"name": "Project",
			"item": [
				{
					"_postman_id": "cdeca132-cb86-4079-8b04-c9912813465c",
					"name": "Get Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project"
							]
						},
						"description": "Returns all CLA projects."
					},
					"response": []
				},
				{
					"_postman_id": "d5250ca0-5d4a-4aef-ba40-fb3c60d0fc90",
					"name": "Get Project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}"
							]
						},
						"description": "Returns the CLA project requested by ID."
					},
					"response": []
				},
				{
					"_postman_id": "c537231f-f02c-4da8-b6ab-3dab77c78d57",
					"name": "Get External Project",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/external/{project_external_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"external",
								"{project_external_id}"
							]
						},
						"description": "Returns the list of CLA projects marching the requested external ID."
					},
					"response": []
				},
				{
					"_postman_id": "3a346b35-a95e-42c3-bad9-9c72ae70a2a1",
					"name": "Post Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"project_external_id\": \"<proj-external-id>\", \"project_name\": \"Project Name\",\n           \"project_icla_enabled\": true, \"project_ccla_enabled\": true,\n           \"project_ccla_requires_icla_signature\": true}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project"
							]
						},
						"description": "Returns the CLA project that was just created."
					},
					"response": []
				},
				{
					"_postman_id": "a80b141e-db87-4c12-8d73-fdf5c8d4660d",
					"name": "Put Project",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\"project_id\": \"<project_id>\",\n\t\"project_name\": \"<new_name>\"}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project"
							]
						},
						"description": "Returns the CLA project that was just updated."
					},
					"response": []
				},
				{
					"_postman_id": "320bf265-4017-4193-9672-cdbfe9eee912",
					"name": "Delete Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}"
							]
						},
						"description": "Deletes the specified project."
					},
					"response": []
				},
				{
					"_postman_id": "1463b78d-71b7-40c6-9218-09fa79e9394b",
					"name": "Get Project Repositories",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/repositories",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"repositories"
							]
						},
						"description": "Gets the specified project's repositories."
					},
					"response": []
				},
				{
					"_postman_id": "21c3dd6b-d9da-4bb4-adc9-6688fe363500",
					"name": "Get Project Organiations",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/organizations",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"organizations"
							]
						},
						"description": "Gets the specified project's tied GitHub organizations."
					},
					"response": []
				},
				{
					"_postman_id": "bb530ca4-7e4a-4161-aa96-115e032a8f94",
					"name": "Get Project Document",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/document/{document_type}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"document",
								"{document_type}"
							]
						},
						"description": "Fetch a project's signature document."
					},
					"response": []
				},
				{
					"_postman_id": "cb067564-4583-4178-b534-2e17393ab9e1",
					"name": "Get Project Document PDF specific",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/document/{document_type}/pdf/{document_major_version}/{document_minor_version}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"document",
								"{document_type}",
								"pdf",
								"{document_major_version}",
								"{document_minor_version}"
							]
						},
						"description": "Returns the PDF document version matching the individual or corporate contract for that project."
					},
					"response": []
				},
				{
					"_postman_id": "5a583f90-62a2-4eb8-9441-96fcce8831aa",
					"name": "Get Project Document PDF",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/document/{document_type}/pdf",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"document",
								"{document_type}",
								"pdf"
							]
						},
						"description": "Returns the PDF document matching the latest individual or corporate contract for that project."
					},
					"response": []
				},
				{
					"_postman_id": "8f62635d-821a-4175-899d-c16182194bf0",
					"name": "Get Project Companies",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/companies",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"companies"
							]
						},
						"description": "Fetch all the companies that are associated with a project through a CCLA."
					},
					"response": []
				},
				{
					"_postman_id": "431f7ffb-3984-468d-8ad5-087824cf1efb",
					"name": "Post Project Document",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"document_name\": \"doc_name.pdf\",\n           \"document_content_type\": \"url+pdf\",\n           \"document_content\": \"http://url.com/doc.pdf\",\n           \"document_preamble\": \"Preamble here\",\n           \"document_legal_entity_name\": \"Legal entity name\",\n           \"new_major_version\": false}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/document/{document_type}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"document",
								"{document_type}"
							]
						},
						"description": "Creates a new CLA document for a specified project.\n Will create a new revision of the individual or corporate document. if new_major_version is set, the document will have a new major version and this will force users to re-sign.\n If document_content_type starts with 'storage+', the document_content is assumed to be base64 encoded binary data that will be saved in the CLA system's configured storage service.\n \n {document_type} is 'individual' or 'corporate'"
					},
					"response": []
				},
				{
					"_postman_id": "2d2bc4da-f459-40d9-b248-f5c82da0dd33",
					"name": "Post Project Document Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"document_name\": \"doc_name.pdf\",\n           \"document_preamble\": \"Preamble here\",\n           \"document_legal_entity_name\": \"Legal entity name\",\n           \"template_name\": \"CNCFTemplate\",\n           \"new_major_version\": false}"
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/document/template/{document_type}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"document",
								"template",
								"{document_type}"
							]
						},
						"description": "Creates a new CLA document from a template for a specified project.\n\n Will create a new revision of the individual or corporate document. if new_major_version is set, the document will have a new major version and this will force users to re-sign.\n\n The document_content_type is assumed to be 'storage+pdf', which means the document content will be saved in the CLA system's configured storage service."
					},
					"response": []
				},
				{
					"_postman_id": "12a015d9-df21-46e0-b7b6-9f1f175f0115",
					"name": "Delete Project Document",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/project/{project_id}/document/{document_type}/{revision}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"project",
								"{project_id}",
								"document",
								"{document_type}",
								"{revision}"
							]
						},
						"description": "Delete a project's signature document by revision."
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "cca495fc-de16-4b93-939b-4c4a07f730bf",
			"name": "Company",
			"item": [
				{
					"_postman_id": "58796078-9c21-4ff9-b631-cfc8bfca0437",
					"name": "Get Companys",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/company",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"company"
							]
						},
						"description": "GET: /company\n\nReturns all CLA companies.\n"
					},
					"response": []
				},
				{
					"_postman_id": "771491de-eef3-4eb9-b544-6e82b9285d94",
					"name": "Create a company",
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/company?",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"company"
							],
							"query": [
								{
									"key": "company_name",
									"value": "A Company Name",
									"disabled": true
								},
								{
									"key": "company_whitelist",
									"value": "runze@twobulls.com",
									"disabled": true
								},
								{
									"key": "company_manager_id",
									"value": "5b23444e-d0f7-410c-8156-228f212e99f3",
									"disabled": true
								},
								{
									"key": "company_whitelist_patterns",
									"value": "*@twobulls.com",
									"disabled": true
								}
							]
						},
						"description": "    POST: /company\n\n    DATA: {'company_name': 'Org Name',\n           'company_whitelist': ['safe@email.org'],\n           'company_whitelist': ['*@email.org'],\n           'company_manager_id': <user-id>}\n\n    Returns the CLA company that was just created."
					},
					"response": []
				},
				{
					"_postman_id": "0d0af4e8-bad6-4484-88d4-01a9f61a78fe",
					"name": "Update a company",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/company?",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"company"
							],
							"query": [
								{
									"key": "company_name",
									"value": "Microsoft",
									"disabled": true
								},
								{
									"key": "company_whitelist",
									"value": "safe@twobulls.com",
									"disabled": true
								},
								{
									"key": "company_manager_id",
									"value": "5b23444e-d0f7-410c-8156-228f212e99f3",
									"disabled": true
								},
								{
									"key": "company_whitelist_patterns",
									"value": "*@twobulls.com, *@msn.com",
									"disabled": true
								},
								{
									"key": "company_id",
									"value": "1d4bf734-5627-4fb3-8601-8fb091e77ef7",
									"disabled": true
								}
							]
						},
						"description": "    POST: /company\n\n    DATA: {\n    \t'company_id': '123-2432-23-342(uuid)'\n    \t'company_name': 'Org Name',\n        'company_whitelist': ['safe@email.org'],\n        'company_whitelist': ['*@email.org'],\n        'company_manager_id': <user-id>}\n\n    Returns the CLA company that was just updated."
					},
					"response": []
				},
				{
					"_postman_id": "430e1ecd-dd18-4440-9058-cd30ffba7fbd",
					"name": "Get a company by Id",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/company/{company_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"company",
								"{company_id}"
							]
						},
						"description": "GET: /company/{company_id}\n\nReturns the CLA company requested by UUID."
					},
					"response": []
				},
				{
					"_postman_id": "4dc24cbc-d630-44a4-a935-c6c0b1970603",
					"name": "Delete a company by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/company/{company_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"company",
								"{company_id}"
							]
						},
						"description": "DELETE: /company/{company_id}\n\nDeletes the specified company."
					},
					"response": []
				},
				{
					"_postman_id": "c0483811-43fa-42e8-8b30-3a84bd8575d5",
					"name": "Get companies by manager Id",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/companies/{manager_id}",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"companies",
								"{manager_id}"
							]
						},
						"description": "GET: /companies/{manager_id}\n\nReturns a list of companies a manager is associated with"
					},
					"response": []
				},
				{
					"_postman_id": "318281a7-b42f-4ba3-8321-11aa1413e3da",
					"name": "Upload whitelist CSV",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/company/{company_id}/import/whitelist/csv",
							"protocol": "https",
							"host": [
								"{{endpoint_url}}"
							],
							"path": [
								"{{stage}}",
								"{{version}}",
								"company",
								"{company_id}",
								"import",
								"whitelist",
								"csv"
							]
						},
						"description": "PUT: /company/{company_id}/import/whitelist/csv\n\n# !!! Need CSV file !!!\n\nImports a CSV file of whitelisted user emails.\nExpects the first column to have a header in the first row and contain email addresses."
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "4932e97a-cad1-42da-be03-a741d96cbbac",
			"name": "Get Health",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{endpoint_url}}/{{stage}}/{{version}}/health",
					"protocol": "https",
					"host": [
						"{{endpoint_url}}"
					],
					"path": [
						"{{stage}}",
						"{{version}}",
						"health"
					]
				},
				"description": "Returns a basic health check on the CLA system."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d73ed44a-48f2-4948-bb90-52d492e75898",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1764ec90-98ea-4c31-9631-a6842b7d2d36",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}