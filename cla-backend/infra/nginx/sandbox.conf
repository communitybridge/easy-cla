server {
    listen 80;
    server_name ${SERVER_NAME};
    root ${WEB_DOCROOT};

    gzip on;

    # If request can through the ELB as http, we forward to https
    if ($http_x_forwarded_proto != "https") {
        return 301 https://$host$request_uri;
    }

    # Strict transport security
    add_header Strict-Transport-Security max-age=16070400;

    client_max_body_size  22m;
    location / {
        proxy_pass http://workspace:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /metrics/ {
        proxy_pass http://workspace:5001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    access_log  /var/log/nginx/access.log  jumbo;
}

server {
    listen 80;
    server_name ${EC2_LOCAL_IP} 127.0.0.1 localhost;

    # Server status for the NewRelic nginx monitoring
    location = /status {
      access_log off;
      stub_status on;
      allow 127.0.0.1;
      deny all;
    }

    # Server status for the AWS ELB
    location = /elb-status {
      access_log off;
      return 200;
    }
}
