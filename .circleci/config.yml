# Copyright The Linux Foundation and each contributor to CommunityBridge.
# SPDX-License-Identifier: MIT
version: 2.1

environment:
  BASH_ENV: ~/.bashrc

jobs:
  # Builds
  buildBackend:
    docker:
      - image: circleci/python:3.7.4-node
    steps:
      - checkout
      - run:
          name: Install Top Level Dependencies
          command: yarn install
      - run:
          name: Install awscli
          command: sudo apt-get install -y awscli
      - run:
          name: make setup
          command: |
            cd cla-backend
            make setup_circle
      - run:
          name: lint
          command: |
            cd cla-backend
            # Lint will always pass for now - need to continue addressing lint issues
            pylint cla/*.py || true
      - run:
          name: test
          command: |
            cd cla-backend
            export GITHUB_OAUTH_TOKEN=${GITHUB_OAUTH_TOKEN}
            python3 -m unittest -v cla/test_github_models.py

  buildGoBackend:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/src/github.com/communitybridge/easycla/
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            cd cla-backend-go
            make setup_dev
      - run:
          name: Build Swagger
          command: |
            cd cla-backend-go
            make swagger
      - run:
          name: Validate Swagger
          command: |
            cd cla-backend-go
            make swagger-validate
      - run:
          name: Build
          command: |
            cd cla-backend-go
            make build-aws-lambda
      - run:
          name: Test
          command: |
            cd cla-backend-go
            make test
      - run:
          name: Lint
          command: |
            cd cla-backend-go
            make lint

  buildUIProject: &buildUIAnchor
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - run:
          name: Install Top Level Dependencies
          command: yarn install
      - run:
          name: Install UI Dependencies
          command: |
            pushd $PROJECT_DIR
            yarn install-frontend
            popd
      - run:
          name: Build UI Source
          command: |
            echo "Building src..."
            pushd $PROJECT_DIR/src
            # Dummy JSON config to allow build to run
            echo "{}" > config/cla-env-config.json
            yarn install
            yarn build
            popd
      - run:
          name: Build Edge Source
          command: |
            echo "Building edge..."
            pushd $PROJECT_DIR/edge
            yarn install
            yarn build
            popd

  buildProjectManagementConsole:
    <<: *buildUIAnchor
    environment:
      PROJECT_DIR: cla-frontend-project-console

  buildCorporateManagementConsole:
    <<: *buildUIAnchor
    environment:
      PROJECT_DIR: cla-frontend-corporate-console

  buildContributorConsole:
    <<: *buildUIAnchor
    environment:
      PROJECT_DIR: cla-frontend-contributor-console

workflows:
  version: 2.1
  build:
    jobs:
      - buildBackend:
          filters:
            tags:
              only: /.*/
      - buildGoBackend:
          filters:
            tags:
              only: /.*/
      - buildProjectManagementConsole:
          filters:
            tags:
              only: /.*/
      - buildCorporateManagementConsole:
          filters:
            tags:
              only: /.*/
      - buildContributorConsole:
          filters:
            tags:
              only: /.*/
