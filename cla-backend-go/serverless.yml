---
# Copyright The Linux Foundation and each contributor to CommunityBridge.
# SPDX-License-Identifier: MIT

service: cla-backend-go
frameworkVersion: '^3.29.0'

package:
  # Exclude all first - selectively add in lambda functions,
  # Support for "package.include" and "package.exclude" will be removed with next major release. Please use "package.patterns" instead
  # More Info: https://www.serverless.com/framework/docs/deprecations/#NEW_PACKAGE_PATTERNS
  patterns:
    - '!auth/**'
    - '!bin/*'
    - '!dev.sh'
    - '!docs/**'
    - '!helpers/**'
    - '!Makefile'
    - '!.env/**'
    - '!.venv/**'
    - '!.git*'
    - '!.git/**'
    - '!.vscode/**'
    - '!.serverless-wsgi'
    - '!.pylintrc'
    - '!node_modules/**'
    - '!package-lock.json'
    - '!yarn.lock'

custom:
  allowed_origins: ${file(./env.json):cla-allowed-origins-${opt:stage}, ssm:/cla-allowed-origins-${opt:stage}}
  dynamodb:
    # Region where dynamodb is installed
    region: us-east-1
  # Config for serverless-prune-plugin - remove all but the 10 most recent
  # versions to avoid the "Code storage limit exceeded" error
  prune:
    automatic: true
    number: 3
  ses_from_email:
    dev: admin@dev.lfcla.com
    staging: admin@staging.lfcla.com
    prod: admin@lfx.linuxfoundation.org

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage}
  # EasyCLA v2 is deployed in us-east-2 to support Platform API GW and ACS
  region: us-east-2
  timeout: 300 # optional, in seconds, default is 6
  logRetentionInDays: 14
  lambdaHashingVersion: '20201221' # Resolution of lambda version hashes was improved with better algorithm, which will be used in next major release. Switch to it now by setting "provider.lambdaHashingVersion" to "20201221"

  tracing:
    lambda: true # optional, enables tracing for all functions (can be true (true equals 'Active') 'Active' or 'PassThrough')

  iam:
    role:
      # Alongside provider.iam.role.statements managed policies can also be added to this service-wide Role
      # These will also be merged into the generated IAM Role
      managedPolicies:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"
      statements:
        - Effect: Allow
          Action:
            - cloudwatch:*
          Resource: "*"
        - Effect: Allow
          Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
          Resource: "*"
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:PutObjectAcl
          Resource:
            - "arn:aws:s3:::cla-signature-files-${self:provider.stage}/*"
            - "arn:aws:s3:::cla-project-logo-${self:provider.stage}/*"
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource:
            - "arn:aws:s3:::cla-signature-files-${self:provider.stage}"
            - "arn:aws:s3:::cla-project-logo-${self:provider.stage}"
        - Effect: Allow
          Action:
            - ssm:GetParameter
          Resource:
            - "arn:aws:ssm:${self:provider.region}:${aws:accountId}:parameter/cla-*"
            - "arn:aws:ssm:${self:custom.dynamodb.region}:${aws:accountId}:parameter/cla-*"
        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
          Resource:
            - "*"
          Condition:
            StringEquals:
              ses:FromAddress: ${self:custom.ses_from_email.${opt:stage}}
        - Effect: Allow
          Action:
            - sns:Publish
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:DescribeTable
            - dynamodb:BatchGetItem
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:DescribeStream
            - dynamodb:ListStreams
          Resource:
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-ccla-whitelist-requests"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-cla-manager-requests"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-companies"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-company-invites"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gerrit-instances"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-github-orgs"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-projects"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-session-store"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-store"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-user-permissions"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-users"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-metrics"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-projects-cla-groups"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gitlab-orgs"
        - Effect: Allow
          Action:
            - dynamodb:Query
          Resource:
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-ccla-whitelist-requests/index/company-id-project-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-ccla-whitelist-requests/index/ccla-approval-list-request-project-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-users/index/github-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-users/index/github-username-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-users/index/gitlab-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-users/index/gitlab-username-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-users/index/github-user-external-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-users/index/lf-username-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-users/index/lf-email-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gerrit-instances/index/gerrit-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gerrit-instances/index/gerrit-project-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gerrit-instances/index/gerrit-project-sfid-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/project-signature-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/project-signature-date-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/reference-signature-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/signature-project-reference-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/signature-user-ccla-company-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/project-signature-external-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/signature-company-signatory-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/reference-signature-search-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/signature-project-id-type-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/signature-company-initial-manager-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-signatures/index/signature-project-id-sigtype-signed-approved-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-companies/index/external-company-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-companies/index/company-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-companies/index/company-signing-entity-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-projects/index/external-project-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-projects/index/project-name-search-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-projects/index/project-name-lower-search-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-projects/index/foundation-sfid-project-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories/index/project-repository-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories/index/repository-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories/index/repository-organization-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories/index/external-repository-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories/index/sfdc-repository-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories/index/project-sfid-repository-organization-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories/index/project-sfid-repository-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-repositories/index/repository-type-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-github-orgs/index/github-org-sfid-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-github-orgs/index/project-sfid-organization-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-github-orgs/index/organization-name-lower-search-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-company-invites/index/requested-company-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/event-type-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/user-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/company-id-external-project-id-event-epoch-time-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/event-project-id-event-time-epoch-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/event-cla-group-id-event-time-epoch-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/event-date-and-contains-pii-event-time-epoch-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/company-sfid-foundation-sfid-event-time-epoch-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/company-sfid-project-id-event-time-epoch-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/company-id-event-type-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/event-foundation-sfid-event-time-epoch-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/event-company-sfid-event-data-lower-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-events/index/company-sfid-cla-group-id-event-time-epoch-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-metrics/index/metric-type-salesforce-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-cla-manager-requests/index/cla-manager-requests-company-project-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-cla-manager-requests/index/cla-manager-requests-external-company-project-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-cla-manager-requests/index/cla-manager-requests-project-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-projects-cla-groups/index/cla-group-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-projects-cla-groups/index/foundation-sfid-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gitlab-orgs/index/gitlab-org-sfid-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gitlab-orgs/index/gitlab-project-sfid-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gitlab-orgs/index/gitlab-organization-name-lower-search-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gitlab-orgs/index/gitlab-project-sfid-organization-name-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gitlab-orgs/index/gitlab-full-path-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gitlab-orgs/index/gitlab-external-group-id-index"
            - "arn:aws:dynamodb:${self:custom.dynamodb.region}:${aws:accountId}:table/cla-${opt:stage}-gitlab-orgs/index/gitlab-org-url-index"

  environment:
    STAGE: ${self:provider.stage}
    HOME: /tmp
    REGION: us-east-2
    # Currently, we use DynamoDB in the us-east-1 region
    DYNAMODB_AWS_REGION: us-east-1
    GH_APP_WEBHOOK_SECRET: ${file(./env.json):gh-app-webhook-secret, ssm:/cla-gh-app-webhook-secret-${opt:stage}}
    GH_APP_ID: ${file(./env.json):gh-app-id, ssm:/cla-gh-app-id-${opt:stage}}
    GH_OAUTH_CLIENT_ID: ${file(./env.json):gh-oauth-client-id, ssm:/cla-gh-oauth-client-id-${opt:stage}}
    GH_OAUTH_SECRET: ${file(./env.json):gh-oauth-secret, ssm:/cla-gh-oauth-secret-${opt:stage}}
    GITHUB_OAUTH_TOKEN: ${file(./env.json):gh-access-token, ssm:/cla-gh-access-token-${opt:stage}}
    GH_STATUS_CTX_NAME: "EasyCLA"
    AUTH0_DOMAIN: ${file(./env.json):auth0-domain, ssm:/cla-auth0-domain-${opt:stage}}
    AUTH0_CLIENT_ID: ${file(./env.json):auth0-clientId, ssm:/cla-auth0-clientId-${opt:stage}}
    AUTH0_USERNAME_CLAIM: ${file(./env.json):auth0-username-claim, ssm:/cla-auth0-username-claim-${opt:stage}}
    AUTH0_ALGORITHM: ${file(./env.json):auth0-algorithm, ssm:/cla-auth0-algorithm-${opt:stage}}
    SF_INSTANCE_URL: ${file(./env.json):sf-instance-url, ssm:/cla-sf-instance-url-${opt:stage}}
    SF_CLIENT_ID: ${file(./env.json):sf-client-id, ssm:/cla-sf-consumer-key-${opt:stage}}
    SF_CLIENT_SECRET: ${file(./env.json):sf-client-secret, ssm:/cla-sf-consumer-secret-${opt:stage}}
    SF_USERNAME: ${file(./env.json):sf-username, ssm:/cla-sf-username-${opt:stage}}
    SF_PASSWORD: ${file(./env.json):sf-password, ssm:/cla-sf-password-${opt:stage}}
    DOCRAPTOR_API_KEY: ${file(./env.json):doc-raptor-api-key, ssm:/cla-doc-raptor-api-key-${opt:stage}}
    DOCUSIGN_AUTH_SERVER: ${file(./env.json):docusign-auth-server, ssm:/cla-docusign-auth-server-${sls:stage}}
    DOCUSIGN_USER_ID: ${file(./env.json):docusign-user-id, ssm:/cla-docusign-user-id-${sls:stage}}
    DOCUSIGN_INTEGRATOR_KEY: ${file(./env.json):docusign-integrator-key, ssm:/cla-docusign-integrator-key-${opt:stage}}
    CLA_API_BASE: ${file(./env.json):cla-api-base, ssm:/cla-api-base-${opt:stage}}
    CLA_CONTRIBUTOR_BASE: ${file(./env.json):cla-contributor-base, ssm:/cla-contributor-base-${opt:stage}}
    CLA_CONTRIBUTOR_V2_BASE: ${file(./env.json):cla-contributor-v2-base, ssm:/cla-contributor-v2-base-${opt:stage}}
    CLA_CORPORATE_BASE: ${file(./env.json):cla-corporate-base, ssm:/cla-corporate-base-${opt:stage}}
    CLA_LANDING_PAGE: ${file(./env.json):cla-landing-page, ssm:/cla-landing-page-${opt:stage}}
    CLA_SIGNATURE_FILES_BUCKET: ${file(./env.json):cla-signature-files-bucket, ssm:/cla-signature-files-bucket-${opt:stage}}
    CLA_BUCKET_LOGO_URL: ${file(./env.json):cla-logo-url, ssm:/cla-logo-url-${opt:stage}}
    SES_SENDER_EMAIL_ADDRESS: ${file(./env.json):cla-ses-sender-email-address, ssm:/cla-ses-sender-email-address-${opt:stage}}
    LF_GROUP_CLIENT_ID: ${file(./env.json):lf-group-client-id, ssm:/cla-lf-group-client-id-${opt:stage}}
    LF_GROUP_CLIENT_SECRET: ${file(./env.json):lf-group-client-secret, ssm:/cla-lf-group-client-secret-${opt:stage}}
    LF_GROUP_REFRESH_TOKEN: ${file(./env.json):lf-group-refresh-token, ssm:/cla-lf-group-refresh-token-${opt:stage}}
    LF_GROUP_CLIENT_URL: ${file(./env.json):lf-group-client-url, ssm:/cla-lf-group-client-url-${opt:stage}}
    SNS_EVENT_TOPIC_ARN: ${file(./env.json):sns-event-topic-arn, ssm:/cla-sns-event-topic-arn-${opt:stage}}
    PLATFORM_AUTH0_URL: ${file(./env.json):cla-auth0-platform-url, ssm:/cla-auth0-platform-url-${opt:stage}}
    PLATFORM_AUTH0_CLIENT_ID: ${file(./env.json):cla-auth0-platform-client-id, ssm:/cla-auth0-platform-client-id-${opt:stage}}
    PLATFORM_AUTH0_CLIENT_SECRET: ${file(./env.json):cla-auth0-platform-client-secret, ssm:/cla-auth0-platform-client-secret-${opt:stage}}
    PLATFORM_AUTH0_AUDIENCE: ${file(./env.json):cla-auth0-platform-audience, ssm:/cla-auth0-platform-audience-${opt:stage}}
    PLATFORM_GATEWAY_URL: ${file(./env.json):platform-gateway-url, ssm:/cla-auth0-platform-api-gw-${opt:stage}}
    # Set to true for verbose API logging - useful when Debugging API calls for Core Platform Services or other external services
    # LOG_DEVEL: debug              # default is debug
    # DEBUG: false                  # default is false
    LOG_FORMAT: json
    # GH_ORG_VALIDATION: true       # default is true/enabled
    # COMPANY_USER_VALIDATION: true # default is true/enabled
    # 08/31/2020 - SETUPTOOLS needs to be set for the Python run-time + Debian/Ubuntu (current lambda run-time),
    # See:
    # https://github.com/pypa/setuptools/issues/2350 and
    # https://github.com/pypa/setuptools/issues/2232
    SETUPTOOLS_USE_DISTUTILS: stdlib
    # Turn on USER_AUTH_TRACING to see additional debug of user scopes for the authenticated users - output is verbose
    USER_AUTH_TRACING: true

  stackTags:
    Name: ${self:service}
    stage: ${self:provider.stage}
    Project: "EasyCLA"
    Product: "EasyCLA"
    ManagedBy: "Serverless CloudFormation"
    ServiceType: "Product"
    Service: ${self:service}
    ServiceRole: "Backend"
    ProgrammingPlatform: Go
    Owner: "David Deal"
  tags:
    Name: ${self:service}
    stage: ${self:provider.stage}
    Project: "EasyCLA"
    Product: "EasyCLA"
    ManagedBy: "Serverless CloudFormation"
    ServiceType: "Product"
    Service: ${self:service}
    ServiceRole: "Backend"
    ProgrammingPlatform: Go
    Owner: "David Deal"

plugins:
  - serverless-plugin-tracing
  # Serverless Finch does s3 uploading. Called with 'sls client deploy'.
  # Also allows bucket removal with 'sls client remove'.
  - serverless-finch
  # To avoid a Code Storage Limit after tons of deploys and revisions - we can prune old versions
  # This plugin allows us to remove/prune the old versions either manually or automatically
  - serverless-prune-plugin

functions:
  # Only lambda function we want in us-east-2, for now, is the V2 API (/v4 endpoint)
  # which is invoked by the platform core services
  api:
    # Provide name, otherwise the default will be something like: ${self:service}-${stage}-api
    # which is fine, but we need to add the name to the platform api-gw config to make lambda-to-lambda invoke call
    # so, setting this allows us to always know the name of the lambda (hard-coded now, which ignores the stage identifier in the name)
    name: ${self:service}-api-v4-lambda # must match lfx-api-gw lambda name
    description: "EasyCLA v2 API"
    runtime: go1.x
    handler: 'bin/backend-aws-lambda'
    package:
      individually: true
      patterns:
        - 'bin/backend-aws-lambda'
