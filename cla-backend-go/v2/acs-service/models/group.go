// Code generated by go-swagger; DO NOT EDIT.

// Copyright The Linux Foundation and each contributor to CommunityBridge.
// SPDX-License-Identifier: MIT
//

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Group Group
//
// Group is entity to group of users
//
// swagger:model Group
type Group struct {

	// Unix timestamp when data is created
	// Read Only: true
	CreatedAt int64 `json:"created_at,omitempty"`

	// LFID/Username of entity author/creator
	CreatedBy string `json:"created_by,omitempty"`

	// Description of group
	Description string `json:"description,omitempty"`

	// Unique UUID of group
	// Read Only: true
	GroupID string `json:"group_id,omitempty"`

	// Group name
	GroupName string `json:"group_name,omitempty"`

	// Group name
	GroupTitle string `json:"group_title,omitempty"`

	// Project ID
	ProjectID string `json:"project_id,omitempty"`

	// Project name mapped from object_id
	ProjectName string `json:"project_name,omitempty"`

	// Unix timestamp when data is last updated
	// Read Only: true
	UpdatedAt int64 `json:"updated_at,omitempty"`

	// Username/LFID of user who updated last
	UpdatedBy string `json:"updated_by,omitempty"`
}

// Validate validates this group
func (m *Group) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Group) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Group) UnmarshalBinary(b []byte) error {
	var res Group
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
