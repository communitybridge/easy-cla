// Code generated by go-swagger; DO NOT EDIT.

// Copyright The Linux Foundation and each contributor to CommunityBridge.
// SPDX-License-Identifier: MIT
//

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RoleDetail Role Detail
//
// Role Detail is extended entity of Role with additional data like number of users and number of groups which is shown on list and get role endpoint
//
// swagger:model RoleDetail
type RoleDetail struct {
	Role

	// number of groups
	NumberOfGroups int64 `json:"number_of_groups,omitempty"`

	// number of users
	NumberOfUsers int64 `json:"number_of_users,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *RoleDetail) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 Role
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.Role = aO0

	// now for regular properties
	var propsRoleDetail struct {
		NumberOfGroups int64 `json:"number_of_groups,omitempty"`

		NumberOfUsers int64 `json:"number_of_users,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsRoleDetail); err != nil {
		return err
	}
	m.NumberOfGroups = propsRoleDetail.NumberOfGroups

	m.NumberOfUsers = propsRoleDetail.NumberOfUsers

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m RoleDetail) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.Role)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsRoleDetail struct {
		NumberOfGroups int64 `json:"number_of_groups,omitempty"`

		NumberOfUsers int64 `json:"number_of_users,omitempty"`
	}
	propsRoleDetail.NumberOfGroups = m.NumberOfGroups

	propsRoleDetail.NumberOfUsers = m.NumberOfUsers

	jsonDataPropsRoleDetail, errRoleDetail := swag.WriteJSON(propsRoleDetail)
	if errRoleDetail != nil {
		return nil, errRoleDetail
	}
	_parts = append(_parts, jsonDataPropsRoleDetail)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this role detail
func (m *RoleDetail) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with Role
	if err := m.Role.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *RoleDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RoleDetail) UnmarshalBinary(b []byte) error {
	var res RoleDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
