// Code generated by go-swagger; DO NOT EDIT.

// Copyright The Linux Foundation and each contributor to CommunityBridge.
// SPDX-License-Identifier: MIT
//

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/account"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/action"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/doc"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/group"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/group_role"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/health"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/invite"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/me"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/meta"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/object_type"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/policy"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/project"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/resource"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/role"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/service"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/user_role"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/users"
	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/client/warden"
)

// Default central authorization layer for the l f x platform HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/v1/api"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new central authorization layer for the l f x platform HTTP client.
func NewHTTPClient(formats strfmt.Registry) *CentralAuthorizationLayerForTheLFXPlatform {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new central authorization layer for the l f x platform HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *CentralAuthorizationLayerForTheLFXPlatform {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new central authorization layer for the l f x platform client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *CentralAuthorizationLayerForTheLFXPlatform {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(CentralAuthorizationLayerForTheLFXPlatform)
	cli.Transport = transport
	cli.Account = account.New(transport, formats)
	cli.Action = action.New(transport, formats)
	cli.Doc = doc.New(transport, formats)
	cli.Group = group.New(transport, formats)
	cli.GroupRole = group_role.New(transport, formats)
	cli.Health = health.New(transport, formats)
	cli.Invite = invite.New(transport, formats)
	cli.Me = me.New(transport, formats)
	cli.Meta = meta.New(transport, formats)
	cli.ObjectType = object_type.New(transport, formats)
	cli.Policy = policy.New(transport, formats)
	cli.Project = project.New(transport, formats)
	cli.Resource = resource.New(transport, formats)
	cli.Role = role.New(transport, formats)
	cli.Service = service.New(transport, formats)
	cli.UserRole = user_role.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.Warden = warden.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// CentralAuthorizationLayerForTheLFXPlatform is a client for central authorization layer for the l f x platform
type CentralAuthorizationLayerForTheLFXPlatform struct {
	Account account.ClientService

	Action action.ClientService

	Doc doc.ClientService

	Group group.ClientService

	GroupRole group_role.ClientService

	Health health.ClientService

	Invite invite.ClientService

	Me me.ClientService

	Meta meta.ClientService

	ObjectType object_type.ClientService

	Policy policy.ClientService

	Project project.ClientService

	Resource resource.ClientService

	Role role.ClientService

	Service service.ClientService

	UserRole user_role.ClientService

	Users users.ClientService

	Warden warden.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *CentralAuthorizationLayerForTheLFXPlatform) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Account.SetTransport(transport)
	c.Action.SetTransport(transport)
	c.Doc.SetTransport(transport)
	c.Group.SetTransport(transport)
	c.GroupRole.SetTransport(transport)
	c.Health.SetTransport(transport)
	c.Invite.SetTransport(transport)
	c.Me.SetTransport(transport)
	c.Meta.SetTransport(transport)
	c.ObjectType.SetTransport(transport)
	c.Policy.SetTransport(transport)
	c.Project.SetTransport(transport)
	c.Resource.SetTransport(transport)
	c.Role.SetTransport(transport)
	c.Service.SetTransport(transport)
	c.UserRole.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.Warden.SetTransport(transport)
}
