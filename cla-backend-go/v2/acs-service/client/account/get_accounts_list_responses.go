// Code generated by go-swagger; DO NOT EDIT.

// Copyright The Linux Foundation and each contributor to CommunityBridge.
// SPDX-License-Identifier: MIT
//

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/models"
)

// GetAccountsListReader is a Reader for the GetAccountsList structure.
type GetAccountsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAccountsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccountsListOK creates a GetAccountsListOK with default headers values
func NewGetAccountsListOK() *GetAccountsListOK {
	return &GetAccountsListOK{}
}

/*GetAccountsListOK handles this case with default header values.

Success
*/
type GetAccountsListOK struct {
	Payload []*models.Account
}

func (o *GetAccountsListOK) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAccountsListOK  %+v", 200, o.Payload)
}

func (o *GetAccountsListOK) GetPayload() []*models.Account {
	return o.Payload
}

func (o *GetAccountsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsListBadRequest creates a GetAccountsListBadRequest with default headers values
func NewGetAccountsListBadRequest() *GetAccountsListBadRequest {
	return &GetAccountsListBadRequest{}
}

/*GetAccountsListBadRequest handles this case with default header values.

Invalid request
*/
type GetAccountsListBadRequest struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *GetAccountsListBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAccountsListBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccountsListBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAccountsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsListUnauthorized creates a GetAccountsListUnauthorized with default headers values
func NewGetAccountsListUnauthorized() *GetAccountsListUnauthorized {
	return &GetAccountsListUnauthorized{}
}

/*GetAccountsListUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAccountsListUnauthorized struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *GetAccountsListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAccountsListUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAccountsListUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAccountsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsListForbidden creates a GetAccountsListForbidden with default headers values
func NewGetAccountsListForbidden() *GetAccountsListForbidden {
	return &GetAccountsListForbidden{}
}

/*GetAccountsListForbidden handles this case with default header values.

Insufficient privilege to execute action
*/
type GetAccountsListForbidden struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *GetAccountsListForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAccountsListForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountsListForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAccountsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsListNotFound creates a GetAccountsListNotFound with default headers values
func NewGetAccountsListNotFound() *GetAccountsListNotFound {
	return &GetAccountsListNotFound{}
}

/*GetAccountsListNotFound handles this case with default header values.

Not found
*/
type GetAccountsListNotFound struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *GetAccountsListNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAccountsListNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountsListNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAccountsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
