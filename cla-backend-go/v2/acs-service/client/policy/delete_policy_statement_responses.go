// Code generated by go-swagger; DO NOT EDIT.

// Copyright The Linux Foundation and each contributor to CommunityBridge.
// SPDX-License-Identifier: MIT
//

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/models"
)

// DeletePolicyStatementReader is a Reader for the DeletePolicyStatement structure.
type DeletePolicyStatementReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePolicyStatementReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePolicyStatementNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePolicyStatementBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeletePolicyStatementUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePolicyStatementForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePolicyStatementNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePolicyStatementNoContent creates a DeletePolicyStatementNoContent with default headers values
func NewDeletePolicyStatementNoContent() *DeletePolicyStatementNoContent {
	return &DeletePolicyStatementNoContent{}
}

/*DeletePolicyStatementNoContent handles this case with default header values.

An empty response
*/
type DeletePolicyStatementNoContent struct {
}

func (o *DeletePolicyStatementNoContent) Error() string {
	return fmt.Sprintf("[DELETE /policies/{policyId}/statements/{statementId}][%d] deletePolicyStatementNoContent ", 204)
}

func (o *DeletePolicyStatementNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePolicyStatementBadRequest creates a DeletePolicyStatementBadRequest with default headers values
func NewDeletePolicyStatementBadRequest() *DeletePolicyStatementBadRequest {
	return &DeletePolicyStatementBadRequest{}
}

/*DeletePolicyStatementBadRequest handles this case with default header values.

Invalid request
*/
type DeletePolicyStatementBadRequest struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *DeletePolicyStatementBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /policies/{policyId}/statements/{statementId}][%d] deletePolicyStatementBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePolicyStatementBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePolicyStatementBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePolicyStatementUnauthorized creates a DeletePolicyStatementUnauthorized with default headers values
func NewDeletePolicyStatementUnauthorized() *DeletePolicyStatementUnauthorized {
	return &DeletePolicyStatementUnauthorized{}
}

/*DeletePolicyStatementUnauthorized handles this case with default header values.

Unauthorized
*/
type DeletePolicyStatementUnauthorized struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *DeletePolicyStatementUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /policies/{policyId}/statements/{statementId}][%d] deletePolicyStatementUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePolicyStatementUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePolicyStatementUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePolicyStatementForbidden creates a DeletePolicyStatementForbidden with default headers values
func NewDeletePolicyStatementForbidden() *DeletePolicyStatementForbidden {
	return &DeletePolicyStatementForbidden{}
}

/*DeletePolicyStatementForbidden handles this case with default header values.

Insufficient privilege to execute action
*/
type DeletePolicyStatementForbidden struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *DeletePolicyStatementForbidden) Error() string {
	return fmt.Sprintf("[DELETE /policies/{policyId}/statements/{statementId}][%d] deletePolicyStatementForbidden  %+v", 403, o.Payload)
}

func (o *DeletePolicyStatementForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePolicyStatementForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePolicyStatementNotFound creates a DeletePolicyStatementNotFound with default headers values
func NewDeletePolicyStatementNotFound() *DeletePolicyStatementNotFound {
	return &DeletePolicyStatementNotFound{}
}

/*DeletePolicyStatementNotFound handles this case with default header values.

Not found
*/
type DeletePolicyStatementNotFound struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *DeletePolicyStatementNotFound) Error() string {
	return fmt.Sprintf("[DELETE /policies/{policyId}/statements/{statementId}][%d] deletePolicyStatementNotFound  %+v", 404, o.Payload)
}

func (o *DeletePolicyStatementNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePolicyStatementNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
