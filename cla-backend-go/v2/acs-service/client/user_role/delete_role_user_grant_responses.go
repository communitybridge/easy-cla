// Code generated by go-swagger; DO NOT EDIT.

// Copyright The Linux Foundation and each contributor to CommunityBridge.
// SPDX-License-Identifier: MIT
//

package user_role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/communitybridge/easycla/cla-backend-go/v2/acs-service/models"
)

// DeleteRoleUserGrantReader is a Reader for the DeleteRoleUserGrant structure.
type DeleteRoleUserGrantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoleUserGrantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRoleUserGrantNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRoleUserGrantBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRoleUserGrantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRoleUserGrantForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoleUserGrantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteRoleUserGrantNoContent creates a DeleteRoleUserGrantNoContent with default headers values
func NewDeleteRoleUserGrantNoContent() *DeleteRoleUserGrantNoContent {
	return &DeleteRoleUserGrantNoContent{}
}

/*DeleteRoleUserGrantNoContent handles this case with default header values.

An empty response
*/
type DeleteRoleUserGrantNoContent struct {
}

func (o *DeleteRoleUserGrantNoContent) Error() string {
	return fmt.Sprintf("[DELETE /roles/{id}/members/users/{grantId}][%d] deleteRoleUserGrantNoContent ", 204)
}

func (o *DeleteRoleUserGrantNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleUserGrantBadRequest creates a DeleteRoleUserGrantBadRequest with default headers values
func NewDeleteRoleUserGrantBadRequest() *DeleteRoleUserGrantBadRequest {
	return &DeleteRoleUserGrantBadRequest{}
}

/*DeleteRoleUserGrantBadRequest handles this case with default header values.

Invalid request
*/
type DeleteRoleUserGrantBadRequest struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *DeleteRoleUserGrantBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /roles/{id}/members/users/{grantId}][%d] deleteRoleUserGrantBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRoleUserGrantBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRoleUserGrantBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoleUserGrantUnauthorized creates a DeleteRoleUserGrantUnauthorized with default headers values
func NewDeleteRoleUserGrantUnauthorized() *DeleteRoleUserGrantUnauthorized {
	return &DeleteRoleUserGrantUnauthorized{}
}

/*DeleteRoleUserGrantUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteRoleUserGrantUnauthorized struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *DeleteRoleUserGrantUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /roles/{id}/members/users/{grantId}][%d] deleteRoleUserGrantUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteRoleUserGrantUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRoleUserGrantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoleUserGrantForbidden creates a DeleteRoleUserGrantForbidden with default headers values
func NewDeleteRoleUserGrantForbidden() *DeleteRoleUserGrantForbidden {
	return &DeleteRoleUserGrantForbidden{}
}

/*DeleteRoleUserGrantForbidden handles this case with default header values.

Insufficient privilege to execute action
*/
type DeleteRoleUserGrantForbidden struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *DeleteRoleUserGrantForbidden) Error() string {
	return fmt.Sprintf("[DELETE /roles/{id}/members/users/{grantId}][%d] deleteRoleUserGrantForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRoleUserGrantForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRoleUserGrantForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoleUserGrantNotFound creates a DeleteRoleUserGrantNotFound with default headers values
func NewDeleteRoleUserGrantNotFound() *DeleteRoleUserGrantNotFound {
	return &DeleteRoleUserGrantNotFound{}
}

/*DeleteRoleUserGrantNotFound handles this case with default header values.

Not found
*/
type DeleteRoleUserGrantNotFound struct {
	/*Unique request ID to help in tracing and debugging
	 */
	XREQUESTID string

	Payload *models.ErrorResponse
}

func (o *DeleteRoleUserGrantNotFound) Error() string {
	return fmt.Sprintf("[DELETE /roles/{id}/members/users/{grantId}][%d] deleteRoleUserGrantNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRoleUserGrantNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteRoleUserGrantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-REQUEST-ID
	o.XREQUESTID = response.GetHeader("X-REQUEST-ID")

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
