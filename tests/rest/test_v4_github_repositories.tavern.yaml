---
test_name: "github repositories functional test"
includes:
  - !include auth_stage.yaml
  - !include common.yaml

stages:
  - type: ref
    id: login_get_token
  - name: get github repositories for project with with no auth
    request:
      url: "{v2_api_url}/v4/project/a0941000002wBz4AAE/github/repositories"
      method: GET
    response:
      status_code: 401
  - name: get github repositories for project
    request:
      url: "{v2_api_url}/v4/project/a0941000002wBz4AAE/github/repositories"
      method: GET
      headers:
        Authorization: "Bearer {auth0_token:s}"
    response:
      status_code: 200
      headers:
        content-type: application/json
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              list:
                type: seq
                sequence:
                - type: map
                  mapping:
                    dateCreated:
                      type: str
                      required: true
                    dateModified:
                      type: str
                      required: true
                    repositoryExternalID:
                      type: str
                      required: true
                    repositoryID:
                      type: str
                      required: true
                    repositoryName:
                      type: str
                      required: true
                    repositoryOrganizationName:
                      type: str
                      required: true
                    repositoryProjectID:
                      type: str
                      required: true
                    repositorySfdcID:
                      type: str
                      required: true
                    repositoryType:
                      type: str
                      required: true
                    repositoryUrl:
                      type: str
                      required: true
                    version:
                      type: str
                      required: true
  - name: add gihtub repository with no auth
    request:
      url: "{v2_api_url}/v4/project/a0941000002wBz4AAE/github/repositories"
      method: POST
      json:
        repositoryName: "taverntestorg/clatest"
        repositoryType: "github"
        repositoryUrl: "https://github.com/taverntestorg/clatest"
        repositoryOrganizationName: "taverntestorg"
        repositoryProjectID: "eeb85b72-f8a2-46af-88c0-08bbf96a51b0"
        repositoryExternalID: "100000000"
      headers:
        Content-Type: "application/json"
    response:
      status_code: 401

  - name: add gihtub repository with auth
    request:
      url: "{v2_api_url}/v4/project/a0941000002wBz4AAE/github/repositories"
      method: POST
      headers:
        Content-Type: "application/json"
        Authorization: "Bearer {auth0_token:s}"
      json:
        repositoryName: "taverntestorg/clatest"
        repositoryType: "github"
        repositoryUrl: "https://github.com/taverntestorg/clatest"
        repositoryOrganizationName: "taverntestorg"
        repositoryProjectID: "eeb85b72-f8a2-46af-88c0-08bbf96a51b0"
        repositoryExternalID: "100000000"
    response:
      status_code: 200
      save:
        body:
          repositoryID: repositoryID
      body:
        repositoryName: "taverntestorg/clatest"
        repositoryType: "github"
        repositoryUrl: "https://github.com/taverntestorg/clatest"
        repositoryOrganizationName: "taverntestorg"
        repositoryProjectID: "eeb85b72-f8a2-46af-88c0-08bbf96a51b0"
        repositoryExternalID: "100000000"
        version: "v1"

  - name: add already added gihtub repository
    request:
      url: "{v2_api_url}/v4/project/a0941000002wBz4AAE/github/repositories"
      method: POST
      json:
        repositoryName: "taverntestorg/clatest"
        repositoryType: "github"
        repositoryUrl: "https://github.com/taverntestorg/clatest"
        repositoryOrganizationName: "taverntestorg"
        repositoryProjectID: "eeb85b72-f8a2-46af-88c0-08bbf96a51b0"
        repositoryExternalID: "100000000"
      headers:
        Content-Type: "application/json"
        Authorization: "Bearer {auth0_token:s}"
    response:
      status_code: 400

  - name: delete gihtub repository with no auth
    request:
      url: "{v2_api_url}/v4/project/a0941000002wBz4AAE/github/repositories/{repositoryID:s}"
      method: DELETE
    response:
      status_code: 401

  - name: delete gihtub repository with auth
    request:
      url: "{v2_api_url}/v4/project/a0941000002wBz4AAE/github/repositories/{repositoryID:s}"
      method: DELETE
      headers:
        Authorization: "Bearer {auth0_token:s}"
    response:
      status_code: 200

  - name: delete already deleted gihtub repository
    request:
      url: "{v2_api_url}/v4/project/a0941000002wBz4AAE/github/repositories/taverntestgithuborg"
      method: DELETE
      headers:
        Authorization: "Bearer {auth0_token:s}"
    response:
      status_code: 404